/**
 * This class is generated by jOOQ
 */
package generated.tables


import generated.Keys
import generated.Public
import generated.tables.records.MentionsRecord

import java.lang.Class
import java.lang.Long
import java.lang.String
import java.sql.Timestamp
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Identity
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl


object Mentions {

	/**
	 * The reference instance of <code>public.mentions</code>
	 */
	val MENTIONS = new Mentions
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	),
	comments = "This class is generated by jOOQ"
)
class Mentions(alias : String, aliased : Table[MentionsRecord], parameters : Array[ Field[_] ]) extends TableImpl[MentionsRecord](alias, Public.PUBLIC, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[MentionsRecord] = {
		classOf[MentionsRecord]
	}

	/**
	 * The column <code>public.mentions.id</code>.
	 */
	val ID : TableField[MentionsRecord, Long] = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), "")

	/**
	 * The column <code>public.mentions.tweet_id</code>.
	 */
	val TWEET_ID : TableField[MentionsRecord, String] = createField("tweet_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), "")

	/**
	 * The column <code>public.mentions.user_id</code>.
	 */
	val USER_ID : TableField[MentionsRecord, Long] = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), "")

	/**
	 * The column <code>public.mentions.created_on</code>.
	 */
	val CREATED_ON : TableField[MentionsRecord, Timestamp] = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), "")

	/**
	 * The column <code>public.mentions.author_user_name</code>.
	 */
	val AUTHOR_USER_NAME : TableField[MentionsRecord, String] = createField("author_user_name", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), "")

	/**
	 * The column <code>public.mentions.text</code>.
	 */
	val TEXT : TableField[MentionsRecord, String] = createField("text", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), "")

	/**
	 * Create a <code>public.mentions</code> table reference
	 */
	def this() = {
		this("mentions", null, null)
	}

	/**
	 * Create an aliased <code>public.mentions</code> table reference
	 */
	def this(alias : String) = {
		this(alias, generated.tables.Mentions.MENTIONS, null)
	}

	private def this(alias : String, aliased : Table[MentionsRecord]) = {
		this(alias, aliased, null)
	}

	override def getIdentity : Identity[MentionsRecord, Long] = {
		Keys.IDENTITY_MENTIONS
	}

	override def getPrimaryKey : UniqueKey[MentionsRecord] = {
		Keys.MENTIONS_PKEY
	}

	override def getKeys : List[ UniqueKey[MentionsRecord] ] = {
		return Arrays.asList[ UniqueKey[MentionsRecord] ](Keys.MENTIONS_PKEY)
	}

	override def as(alias : String) : Mentions = {
		new Mentions(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : Mentions = {
		new Mentions(name, null)
	}
}
