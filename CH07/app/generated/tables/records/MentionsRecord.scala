/**
 * This class is generated by jOOQ
 */
package generated.tables.records


import generated.tables.Mentions

import java.lang.Long
import java.lang.String
import java.sql.Timestamp

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	),
	comments = "This class is generated by jOOQ"
)
class MentionsRecord extends UpdatableRecordImpl[MentionsRecord](Mentions.MENTIONS) with Record6[Long, String, Long, Timestamp, String, String] {

	/**
	 * Setter for <code>public.mentions.id</code>.
	 */
	def setId(value : Long) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>public.mentions.id</code>.
	 */
	def getId : Long = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[Long]
	}

	/**
	 * Setter for <code>public.mentions.tweet_id</code>.
	 */
	def setTweetId(value : String) : Unit = {
		setValue(1, value)
	}

	/**
	 * Getter for <code>public.mentions.tweet_id</code>.
	 */
	def getTweetId : String = {
		val r = getValue(1)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>public.mentions.user_id</code>.
	 */
	def setUserId(value : Long) : Unit = {
		setValue(2, value)
	}

	/**
	 * Getter for <code>public.mentions.user_id</code>.
	 */
	def getUserId : Long = {
		val r = getValue(2)
		if (r == null) null else r.asInstanceOf[Long]
	}

	/**
	 * Setter for <code>public.mentions.created_on</code>.
	 */
	def setCreatedOn(value : Timestamp) : Unit = {
		setValue(3, value)
	}

	/**
	 * Getter for <code>public.mentions.created_on</code>.
	 */
	def getCreatedOn : Timestamp = {
		val r = getValue(3)
		if (r == null) null else r.asInstanceOf[Timestamp]
	}

	/**
	 * Setter for <code>public.mentions.author_user_name</code>.
	 */
	def setAuthorUserName(value : String) : Unit = {
		setValue(4, value)
	}

	/**
	 * Getter for <code>public.mentions.author_user_name</code>.
	 */
	def getAuthorUserName : String = {
		val r = getValue(4)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>public.mentions.text</code>.
	 */
	def setText(value : String) : Unit = {
		setValue(5, value)
	}

	/**
	 * Getter for <code>public.mentions.text</code>.
	 */
	def getText : String = {
		val r = getValue(5)
		if (r == null) null else r.asInstanceOf[String]
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------
	override def key() : Record1[Long] = {
		return super.key.asInstanceOf[ Record1[Long] ]
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row6[Long, String, Long, Timestamp, String, String] = {
		super.fieldsRow.asInstanceOf[ Row6[Long, String, Long, Timestamp, String, String] ]
	}

	override def valuesRow : Row6[Long, String, Long, Timestamp, String, String] = {
		super.valuesRow.asInstanceOf[ Row6[Long, String, Long, Timestamp, String, String] ]
	}
	override def field1 : Field[Long] = Mentions.MENTIONS.ID
	override def field2 : Field[String] = Mentions.MENTIONS.TWEET_ID
	override def field3 : Field[Long] = Mentions.MENTIONS.USER_ID
	override def field4 : Field[Timestamp] = Mentions.MENTIONS.CREATED_ON
	override def field5 : Field[String] = Mentions.MENTIONS.AUTHOR_USER_NAME
	override def field6 : Field[String] = Mentions.MENTIONS.TEXT
	override def value1 : Long = getId
	override def value2 : String = getTweetId
	override def value3 : Long = getUserId
	override def value4 : Timestamp = getCreatedOn
	override def value5 : String = getAuthorUserName
	override def value6 : String = getText

	override def value1(value : Long) : MentionsRecord = {
		setId(value)
		this
	}

	override def value2(value : String) : MentionsRecord = {
		setTweetId(value)
		this
	}

	override def value3(value : Long) : MentionsRecord = {
		setUserId(value)
		this
	}

	override def value4(value : Timestamp) : MentionsRecord = {
		setCreatedOn(value)
		this
	}

	override def value5(value : String) : MentionsRecord = {
		setAuthorUserName(value)
		this
	}

	override def value6(value : String) : MentionsRecord = {
		setText(value)
		this
	}

	override def values(value1 : Long, value2 : String, value3 : Long, value4 : Timestamp, value5 : String, value6 : String) : MentionsRecord = {
		this.value1(value1)
		this.value2(value2)
		this.value3(value3)
		this.value4(value4)
		this.value5(value5)
		this.value6(value6)
		this
	}

	/**
	 * Create a detached, initialised MentionsRecord
	 */
	def this(id : Long, tweetId : String, userId : Long, createdOn : Timestamp, authorUserName : String, text : String) = {
		this()

		setValue(0, id)
		setValue(1, tweetId)
		setValue(2, userId)
		setValue(3, createdOn)
		setValue(4, authorUserName)
		setValue(5, text)
	}
}
