/**
 * This class is generated by jOOQ
 */
package generated.tables.records


import generated.tables.TwitterUser

import java.lang.Long
import java.lang.String
import java.sql.Timestamp

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	),
	comments = "This class is generated by jOOQ"
)
class TwitterUserRecord extends UpdatableRecordImpl[TwitterUserRecord](TwitterUser.TWITTER_USER) with Record4[Long, Timestamp, String, String] {

	/**
	 * Setter for <code>public.twitter_user.id</code>.
	 */
	def setId(value : Long) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>public.twitter_user.id</code>.
	 */
	def getId : Long = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[Long]
	}

	/**
	 * Setter for <code>public.twitter_user.created_on</code>.
	 */
	def setCreatedOn(value : Timestamp) : Unit = {
		setValue(1, value)
	}

	/**
	 * Getter for <code>public.twitter_user.created_on</code>.
	 */
	def getCreatedOn : Timestamp = {
		val r = getValue(1)
		if (r == null) null else r.asInstanceOf[Timestamp]
	}

	/**
	 * Setter for <code>public.twitter_user.phone_number</code>.
	 */
	def setPhoneNumber(value : String) : Unit = {
		setValue(2, value)
	}

	/**
	 * Getter for <code>public.twitter_user.phone_number</code>.
	 */
	def getPhoneNumber : String = {
		val r = getValue(2)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>public.twitter_user.twitter_user_name</code>.
	 */
	def setTwitterUserName(value : String) : Unit = {
		setValue(3, value)
	}

	/**
	 * Getter for <code>public.twitter_user.twitter_user_name</code>.
	 */
	def getTwitterUserName : String = {
		val r = getValue(3)
		if (r == null) null else r.asInstanceOf[String]
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------
	override def key() : Record1[Long] = {
		return super.key.asInstanceOf[ Record1[Long] ]
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row4[Long, Timestamp, String, String] = {
		super.fieldsRow.asInstanceOf[ Row4[Long, Timestamp, String, String] ]
	}

	override def valuesRow : Row4[Long, Timestamp, String, String] = {
		super.valuesRow.asInstanceOf[ Row4[Long, Timestamp, String, String] ]
	}
	override def field1 : Field[Long] = TwitterUser.TWITTER_USER.ID
	override def field2 : Field[Timestamp] = TwitterUser.TWITTER_USER.CREATED_ON
	override def field3 : Field[String] = TwitterUser.TWITTER_USER.PHONE_NUMBER
	override def field4 : Field[String] = TwitterUser.TWITTER_USER.TWITTER_USER_NAME
	override def value1 : Long = getId
	override def value2 : Timestamp = getCreatedOn
	override def value3 : String = getPhoneNumber
	override def value4 : String = getTwitterUserName

	override def value1(value : Long) : TwitterUserRecord = {
		setId(value)
		this
	}

	override def value2(value : Timestamp) : TwitterUserRecord = {
		setCreatedOn(value)
		this
	}

	override def value3(value : String) : TwitterUserRecord = {
		setPhoneNumber(value)
		this
	}

	override def value4(value : String) : TwitterUserRecord = {
		setTwitterUserName(value)
		this
	}

	override def values(value1 : Long, value2 : Timestamp, value3 : String, value4 : String) : TwitterUserRecord = {
		this.value1(value1)
		this.value2(value2)
		this.value3(value3)
		this.value4(value4)
		this
	}

	/**
	 * Create a detached, initialised TwitterUserRecord
	 */
	def this(id : Long, createdOn : Timestamp, phoneNumber : String, twitterUserName : String) = {
		this()

		setValue(0, id)
		setValue(1, createdOn)
		setValue(2, phoneNumber)
		setValue(3, twitterUserName)
	}
}
