/**
 * This class is generated by jOOQ
 */
package generated.tables


import generated.Keys
import generated.Public
import generated.tables.records.MentionSubscriptionsRecord

import java.lang.Class
import java.lang.Long
import java.lang.String
import java.sql.Timestamp
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Identity
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl


object MentionSubscriptions {

	/**
	 * The reference instance of <code>public.mention_subscriptions</code>
	 */
	val MENTION_SUBSCRIPTIONS = new MentionSubscriptions
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	),
	comments = "This class is generated by jOOQ"
)
class MentionSubscriptions(alias : String, aliased : Table[MentionSubscriptionsRecord], parameters : Array[ Field[_] ]) extends TableImpl[MentionSubscriptionsRecord](alias, Public.PUBLIC, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[MentionSubscriptionsRecord] = {
		classOf[MentionSubscriptionsRecord]
	}

	/**
	 * The column <code>public.mention_subscriptions.id</code>.
	 */
	val ID : TableField[MentionSubscriptionsRecord, Long] = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), "")

	/**
	 * The column <code>public.mention_subscriptions.created_on</code>.
	 */
	val CREATED_ON : TableField[MentionSubscriptionsRecord, Timestamp] = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), "")

	/**
	 * The column <code>public.mention_subscriptions.user_id</code>.
	 */
	val USER_ID : TableField[MentionSubscriptionsRecord, Long] = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), "")

	/**
	 * Create a <code>public.mention_subscriptions</code> table reference
	 */
	def this() = {
		this("mention_subscriptions", null, null)
	}

	/**
	 * Create an aliased <code>public.mention_subscriptions</code> table reference
	 */
	def this(alias : String) = {
		this(alias, generated.tables.MentionSubscriptions.MENTION_SUBSCRIPTIONS, null)
	}

	private def this(alias : String, aliased : Table[MentionSubscriptionsRecord]) = {
		this(alias, aliased, null)
	}

	override def getIdentity : Identity[MentionSubscriptionsRecord, Long] = {
		Keys.IDENTITY_MENTION_SUBSCRIPTIONS
	}

	override def getPrimaryKey : UniqueKey[MentionSubscriptionsRecord] = {
		Keys.MENTION_SUBSCRIPTIONS_PKEY
	}

	override def getKeys : List[ UniqueKey[MentionSubscriptionsRecord] ] = {
		return Arrays.asList[ UniqueKey[MentionSubscriptionsRecord] ](Keys.MENTION_SUBSCRIPTIONS_PKEY)
	}

	override def as(alias : String) : MentionSubscriptions = {
		new MentionSubscriptions(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : MentionSubscriptions = {
		new MentionSubscriptions(name, null)
	}
}
